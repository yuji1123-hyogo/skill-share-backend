components:
  schemas:
    # ✅ ユーザー情報
    User:
      type: object
      properties:
        id:
          type: string
          example: "64b7a0e58eaf5e001c8b3d9f"
        username:
          type: string
          example: "john_doe"
        email:
          type: string
          example: "john@example.com"
        profilePicture:
          type: string
          nullable: true
          example: "https://example.com/profile.jpg"
        bio:
          type: string
          nullable: true
          example: "I love coding!"
        clubs:
          type: array
          items:
            type: string
            example: "64b7a0e58eaf5e001c8b3d9c"
        posts:
          type: array
          items:
            type: string
            example: "64b7a0e58eaf5e001c8b3d9b"
        following:
          type: array
          items:
            type: string
            example: "64b7a0e58eaf5e001c8b3d9a"
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "JavaScript"
              level:
                type: integer
                example: 3
              currentExperience:
                type: integer
                example: 150
              nextLevelExperience:
                type: integer
                example: 300

    # ✅ クラブ情報
    Club:
      type: object
      properties:
        id:
          type: string
          example: "64b7a0e58eaf5e001c8b3d9c"
        name:
          type: string
          example: "React Developers"
        description:
          type: string
          nullable: true
          example: "A club for React enthusiasts."
        themeImage:
          type: string
          nullable: true
          example: "https://example.com/club-banner.jpg"
        members:
          type: array
          items:
            type: string
            example: "64b7a0e58eaf5e001c8b3d9f"
        events:
          type: array
          items:
            type: string
            example: "64b7a0e58eaf5e001c8b3d9e"
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "JavaScript"
              level:
                type: integer
                example: 2
              currentExperience:
                type: integer
                example: 120
              nextLevelExperience:
                type: integer
                example: 250
        createdAt:
          type: string
          format: date-time
          description: "作成日時 (ISO 8601フォーマット)"
    # ✅ 投稿情報
    Post:
      type: object
      properties:
        id:
          type: string
          example: "64b7a0e58eaf5e001c8b3d9b"
        content:
          type: string
          example: "React is awesome!"
        media:
          type: string
          nullable: true
          example: "https://example.com/react.png"
        author:
          type: string
          example: "64b7a0e58eaf5e001c8b3d9f"
        club:
          type: string
          nullable: true
          example: "64b7a0e58eaf5e001c8b3d9c"
        tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "ReactJS"
              level:
                type: integer
                example: 2
              currentExperience:
                type: integer
                example: 100
              nextLevelExperience:
                type: integer
                example: 200
        comments:
          type: array
          items:
            type: string
            example: "64b7a0e58eaf5e001c8b3d9a"
        createdAt:
          type: string
          format: date-time
          description: "作成日時 (ISO 8601フォーマット)"

    # ✅ コメント情報
    Comment:
      type: object
      properties:
        id:
          type: string
          example: "64b7a0e58eaf5e001c8b3d9a"
        content:
          type: string
          example: "Great post!"
        author:
          type: string
          example: "64b7a0e58eaf5e001c8b3d9f"
        post:
          type: string
          example: "64b7a0e58eaf5e001c8b3d9b"
        createdAt:
          type: string
          format: date-time
          example: "2024-06-12T12:34:56.789Z"

    # ✅ イベント情報
    Event:
      type: object
      properties:
        id:
          type: string
          example: "64b7a0e58eaf5e001c8b3d9e"
        name:
          type: string
          example: "React Workshop"
        host:
          type: string
          example: "64b7a0e58eaf5e001c8b3d9f"
        description:
          type: string
          nullable: true
          example: "A workshop about React best practices."
        date:
          type: string
          format: date-time
          nullable: true
          example: "2024-07-15T10:00:00Z"
        location:
          type: string
          nullable: true
          example: "Online"
        status:
          type: string
          enum: ["upcoming", "ongoing", "completed"]
          example: "upcoming"
        club:
          type: string
          example: "64b7a0e58eaf5e001c8b3d9c"
        participants:
          type: array
          items:
            type: string
            example: "64b7a0e58eaf5e001c8b3d9f"
        mvp:
          type: string
          nullable: true
          example: "64b7a0e58eaf5e001c8b3d9f"
        votes:
          type: array
          items:
            type: object
            properties:
              voter:
                type: string
                example: "64b7a0e58eaf5e001c8b3d9f"
              candidate:
                type: string
                example: "64b7a0e58eaf5e001c8b3d9f"
        eventtags:
          type: array
          items:
            type: string
            example: "ReactJS"
        expDistributed:
          type: boolean
          example: false
        createdAt:
          type: string
          format: date-time
          description: "作成日時 (ISO 8601フォーマット)"
          
  responses:
    Success:
      description: "リクエスト成功"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "操作が成功しました"

    Created:
      description: "リソース作成成功"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "リソースが作成されました"

    Deleted:
      description: "リソース削除成功"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "リソースが削除されました"
